generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// === TABLES === //

model Restaurant {
  id         Int            @id @default(autoincrement())
  name       String
  categories DishCategory[]
  orders     Order[]
}

model DishCategory {
  id           Int        @id @default(autoincrement())
  name         Json
  dishes       Dish[]
  picture      String // URL of the picture
  restaurantId Int
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
}

model Dish {
  id            Int          @id @default(autoincrement())
  name          Json
  price         Float
  picture       String // URL of the picture
  categoryId    Int
  category      DishCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  ingredients   Json
  labels        Json?
  allergies     Allergy[]
  nutritions    Json?
  origin        String?
  type          DishType?
  saleStartDate DateTime?
  saleEndDate   DateTime?
  salePrice     Decimal?
  saleDays      Int[] // 1..7, 1 = monday, 2 = tuesday...

  @@index([categoryId], type: BTree)
}

enum DishType {
  VEGAN
  VEGETARIAN
  PESCATARIAN
  OMNIVORE
}

model Allergy {
  id        Int      @id @default(autoincrement())
  name      Json     @unique
  allergens String[]
  dishes    Dish[]
}

model Nutrition {
  id      Int    @id @default(autoincrement())
  dish    String @unique // Unique dishes, not related to entity Dish
  energy  Int // Unit: kcal
  protein Int // Unit: grams
}

model Order {
  id            Int           @id @default(autoincrement())
  table         String
  positions     Json
  paymentMethod PaymentMethod
  isPayed       Boolean?
  netTotal      Float
  vat           Float?
  note          String?
  restaurantId  Int
  retaurant     Restaurant    @relation(fields: [restaurantId], references: [id])
  orderDate     DateTime?     @default(now()) @db.Timestamp() // UTC
}

enum PaymentMethod {
  CARD
  CASH
  COUPON
}
